<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用最笨的方法记录工作中的一次数据处理</title>
    <url>/2022/08/01/20220801%E7%94%A8%E6%9C%80%E7%AC%A8%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p>最近在做移动端的一个项目，项目中涉及到了一个日期选择的功能，如图所示，看上去貌似很简单，但是在做的过程中，发现难点主要是对于数据的组装。</p>
<span id="more"></span>

<p>项目中用到的是Vant组件库，虽然其也有DatetimePicker时间选择器，但是我看了好久感觉还是有点不符合UI设计，尤其是到某一天的时候还要展示其是周几，很不好弄。所以想了想还是自己搞吧，借助Vant的Picker选择器，自己写了一个，最终的结果如图2，还有点差别，但是那已经不是什么大问题了，很简单！</p>
<p><img src="/2022/08/01/20220801%E7%94%A8%E6%9C%80%E7%AC%A8%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/1.png" alt="(UI稿)"></p>
<center>UI稿</center>


<p><img src="/2022/08/01/20220801%E7%94%A8%E6%9C%80%E7%AC%A8%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/2.png" alt="(最终结果)"></p>
<center>最终结果</center>

<h5 id="第一步：确定数据结构"><a href="#第一步：确定数据结构" class="headerlink" title="第一步：确定数据结构"></a>第一步：确定数据结构</h5><p>Vant的Picker选择器要求这种形式展现的数据结构是数组对象形式的，因此先确定了下面的这种数据结</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&#x27;2022年&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">    <span class="attr">shortName</span>: <span class="number">2022</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;01月&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;month&#x27;</span>,</span><br><span class="line">        <span class="attr">shortName</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;01日(周一)&#x27;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;day&#x27;</span>,</span><br><span class="line">            <span class="attr">shortName</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br></pre></td></tr></table></figure>
<h5 id="第二步：处理数据"><a href="#第二步：处理数据" class="headerlink" title="第二步：处理数据"></a>第二步：处理数据</h5><p>确定完数据结构后，然后就开始写代码了，具体的代码如 <code>const nowDate = new Date(); </code>// 获取当前的日期<code>const year = nowDate.getFullYear();</code> // 获取当前的年份<code>const month = []; </code>// 存储月份</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">13</span>; i++) &#123; <span class="comment">// 生成月份</span></span><br><span class="line">  month.<span class="title function_">push</span>(&#123;</span><br><span class="line">    <span class="attr">text</span>: i &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + <span class="string">`<span class="subst">$&#123;i&#125;</span>月`</span> : <span class="string">`<span class="subst">$&#123;i&#125;</span>月`</span> + <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;month&#x27;</span>,</span><br><span class="line">    <span class="attr">shortName</span>: i + <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: <span class="title function_">dealDay</span>(i)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理日期（天和星期）,因为每一年每个月份日期都是确定的（除2月外），所以大月是31天，小月是30天</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dealDay</span>(<span class="params">month</span>) &#123;</span><br><span class="line">  <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">dealDayWeek</span>(year, month, <span class="number">32</span>); <span class="comment">// 大月31</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">dealDayWeek</span>(year, month, <span class="number">31</span>); <span class="comment">// 小月30</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>: <span class="comment">// 二月单独处理</span></span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">dealMonthDay</span>(year);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 判断是闰年还是平年（闰年2月29，平年28）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dealMonthDay</span>(<span class="params">year</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> ((year % <span class="number">4</span> === <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> !== <span class="number">0</span>) || year % <span class="number">400</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">dealDayWeek</span>(year, <span class="number">2</span>, <span class="number">30</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">dealDayWeek</span>(year, <span class="number">2</span>, <span class="number">29</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据日期获取星期几year: 年份month: 月份total： 每个月的总天数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dealDayWeek</span>(<span class="params">year, month, total</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> weeks = [<span class="string">&#x27;周日&#x27;</span>, <span class="string">&#x27;周一&#x27;</span>, <span class="string">&#x27;周二&#x27;</span>, <span class="string">&#x27;周三&#x27;</span>, <span class="string">&#x27;周四&#x27;</span>, <span class="string">&#x27;周五&#x27;</span>, <span class="string">&#x27;周六&#x27;</span>];</span><br><span class="line">  <span class="keyword">const</span> days = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; total; i++) &#123;</span><br><span class="line"><span class="comment">// 根据传过来的每个月的天数循环和年、月组成新的数据，通过new Date(&#x27;xxxx-xx-xx&#x27;).getDay()的形式获取到星期几所对应的索引号，比如是0，则是星期天</span></span><br><span class="line"><span class="keyword">const</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(year + <span class="string">&#x27;-&#x27;</span> + (month &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + month : month) + <span class="string">&#x27;-&#x27;</span> + (i &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + i : i)).<span class="title function_">getDay</span>(); </span><br><span class="line">    <span class="keyword">const</span> day = weeks[d]; <span class="comment">// 获取星期几</span></span><br><span class="line">    days.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">text</span>: i &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + i + <span class="string">`(<span class="subst">$&#123;day&#125;</span>)`</span> : i + <span class="string">&#x27;&#x27;</span> + <span class="string">`(<span class="subst">$&#123;day&#125;</span>)`</span>,</span><br><span class="line">      <span class="attr">shortName</span>: i + <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;day&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// console.log(days)</span></span><br><span class="line">  <span class="keyword">return</span> days;</span><br><span class="line">&#125; <span class="comment">// 组装完的结果</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> dateTime = [&#123;</span><br><span class="line">    <span class="attr">text</span>: year + <span class="string">&#x27;年&#x27;</span>,</span><br><span class="line">    <span class="attr">shortName</span>: nowDate.<span class="title function_">getFullYear</span>() + <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: month</span><br><span class="line">  &#125;]</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dateTime)</span><br></pre></td></tr></table></figure>
<p>最终得到的结果如图片所示，大功告成（再继续优化一下就ok了）</p>
<p><img src="/2022/08/01/20220801%E7%94%A8%E6%9C%80%E7%AC%A8%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%B0%E5%BD%95%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E4%B8%80%E6%AC%A1%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/3.png" alt="(最终结果)"></p>
<center>最终数据结果</center>]]></content>
  </entry>
  <entry>
    <title>每个前端开发工程师应该知道的那些JS操作</title>
    <url>/2022/07/29/%E7%BD%91%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>作为前端开发的三驾马车的JS，对每一个开发者来说并不陌生，日常工作中打交道最多的估计就是它了，不管你是原生开发还是借助于框架，它永远是重头戏，今天就来分享一些JS开发中常用的一些方法吧！</p>
<span id="more"></span>
<h5 id="1、获取和设置url参数"><a href="#1、获取和设置url参数" class="headerlink" title="1、获取和设置url参数"></a>1、获取和设置url参数</h5><p>这个操作应该是很常见的了，我们在开发的过程中，绝大部分时候（尤其是那种列表跳转到详情页面，更多时候参数是从url地址中带过去的），而对于详情页面很多是够就是要从带过来的参数中选择一些来请求接口的，这样的话，这个方法就发挥它的优势了</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  获取url参数</span></span><br><span class="line"><span class="comment">//  getUrlt(&#x27;baidu.com/write?draftId=123456&#x27;)</span></span><br><span class="line"><span class="comment">//  Object&#123; draftId: &quot;123456&quot;&#125;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUrlt</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  url = url ? url : <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span></span><br><span class="line">  <span class="keyword">let</span> _paUrl = url.<span class="title function_">substring</span>(url.<span class="title function_">indexOf</span>(<span class="string">&#x27;?&#x27;</span>) + <span class="number">1</span>), _arrS = _paUrl.<span class="title function_">split</span>(<span class="string">&#x27;&amp;&#x27;</span>), _rs = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>, _len = _arrS.<span class="property">length</span>; i &lt; _len; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> pos = _arrS[i].<span class="title function_">indexOf</span>(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (pos == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> name = _arrS[i].<span class="title function_">substring</span>(<span class="number">0</span>, pos), value = <span class="variable language_">window</span>.<span class="built_in">decodeURIComponent</span>(_arrS[i].<span class="title function_">substring</span>(pos + <span class="number">1</span>))</span><br><span class="line">    _rs[name] = value</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _rs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  设置url参数</span></span><br><span class="line"><span class="comment">//  setUrl(&#123;&#x27;a&#x27;:1,&#x27;b&#x27;:2&#125;)</span></span><br><span class="line"><span class="comment">//  a=1&amp;b=2</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setUrl</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> _rs = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> p <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (obj[p] != <span class="literal">null</span> &amp;&amp; obj[p] != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      _rs.<span class="title function_">push</span>(p + <span class="string">&#x27;=&#x27;</span> + obj[p])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> _rs.<span class="title function_">join</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="2、rem适配移动端"><a href="#2、rem适配移动端" class="headerlink" title="2、rem适配移动端"></a>2、rem适配移动端</h5><p>移动端的开发对于很多人来说，尤其是缺乏经验的刚入门的小伙伴来说，怎么样能够将UI设计稿适配到各种机型上是很头痛的一件事情，当然了百度上面一搜索也有各种各样的解决方案，但是从我自己的经验来说，我还是喜欢一下的这套方案的，那就是动态的去设置根字体大小</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getFontSize</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> doc=<span class="variable language_">document</span>,win=<span class="variable language_">window</span></span><br><span class="line">  <span class="keyword">var</span> docEl = doc.<span class="property">documentElement</span>,</span><br><span class="line">  resizeEvt = <span class="string">&#x27;orientationchange&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span> ? <span class="string">&#x27;orientationchange&#x27;</span> : <span class="string">&#x27;resize&#x27;</span>,</span><br><span class="line">  recalc = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> clientWidth = docEl.<span class="property">clientWidth</span></span><br><span class="line">    <span class="keyword">if</span> (!clientWidth) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 如果屏幕大于750（750是根据我效果图设置的，具体数值参考效果图），就设置clientWidth=750，防止font-size会超过100px</span></span><br><span class="line">    <span class="keyword">if</span>(clientWidth&gt;<span class="number">750</span>)&#123;clientWidth=<span class="number">750</span>&#125;</span><br><span class="line">    <span class="comment">// 设置根元素font-size大小</span></span><br><span class="line">    docEl.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="number">100</span> * (clientWidth / <span class="number">750</span>) + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 屏幕大小改变，或者横竖屏切换时，触发函数</span></span><br><span class="line">  win.<span class="title function_">addEventListener</span>(resizeEvt, recalc, <span class="literal">false</span>)</span><br><span class="line">  <span class="comment">// 文档加载完成时，触发函数</span></span><br><span class="line">  doc.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, recalc, <span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用方式很简单，比如效果图上，有张图片。宽高都是100px</span></span><br><span class="line"><span class="comment">// 样式写法就是</span></span><br><span class="line">img&#123;</span><br><span class="line">  <span class="attr">width</span>: 1rem;</span><br><span class="line">  <span class="attr">height</span>: 1rem;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这样的设置，比如在屏幕宽度大于等于750px设备上，1rem=100px；图片显示就是宽高都是100px</span></span><br></pre></td></tr></table></figure>



<h5 id="3、Cookie操作"><a href="#3、Cookie操作" class="headerlink" title="3、Cookie操作"></a>3、Cookie操作</h5><p>这个操作就不用多说了，大家都应该要会的，虽然说在JQ年代里，有这样的插件可以拿来用，但是对于一些小的项目引进一个插件就有点多此一举了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置cookie</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setCookie</span>(<span class="params">name,value,iDay</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> oDate=<span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">  oDate.<span class="title function_">setDate</span>(oDate.<span class="title function_">getDate</span>()+iDay)</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">cookie</span>=name+<span class="string">&#x27;=&#x27;</span>+value+<span class="string">&#x27;;expires=&#x27;</span>+oDate</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 获取cookie</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCookie</span>(<span class="params">name</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> arr=<span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&#x27;; &#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> arr2=arr[i].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(arr2[<span class="number">0</span>]==name)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> arr2[<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 删除cookie</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeCookie</span>(<span class="params">name</span>)&#123;</span><br><span class="line">  <span class="title function_">setCookie</span>(name,<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="4、去除字符串空格"><a href="#4、去除字符串空格" class="headerlink" title="4、去除字符串空格"></a>4、去除字符串空格</h5><p>这个应该是最常用的，尤其是在表单操作的时候，当然了虽然JS也有 trim() 这个方法，但是下面的这个方式还是知道最好，万一面试的时候需要呢</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">trimStr</span>(<span class="params">str,type</span>)&#123;</span><br><span class="line">  <span class="keyword">switch</span> (type)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>,<span class="string">&quot;&quot;</span>) <span class="comment">// 所有空格</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:<span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)|(\s*$)/g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">// 前后空格</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:<span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)/g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">// 前空格</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/(\s*$)/g</span>, <span class="string">&quot;&quot;</span>) <span class="comment">// 后空格</span></span><br><span class="line">    <span class="attr">default</span>:<span class="keyword">return</span> str</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="5、冒泡排序"><a href="#5、冒泡排序" class="headerlink" title="5、冒泡排序"></a>5、冒泡排序</h5><p>冒泡排序应当是在面试过程中经常被问到的，实现的方式也有很多，下面分享的这种是先外循环正序遍历, 接着内循环逆序遍历, 从而实现目标</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">swap</span>(<span class="params">i,j,array</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> temp = array[j]</span><br><span class="line">  array[j] = array[i]</span><br><span class="line">  array[i] = temp</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">array</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> length = array.<span class="property">length</span></span><br><span class="line">  <span class="keyword">var</span> isPass</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;  <span class="comment">// 正序</span></span><br><span class="line">    isPass = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = length - <span class="number">1</span>; j &gt;= i+<span class="number">1</span>; j--) &#123;  <span class="comment">// 逆序</span></span><br><span class="line">      array[j] &lt; array[j-<span class="number">1</span>] &amp;&amp; (isPass = <span class="literal">true</span>) &amp;&amp; <span class="title function_">swap</span>(j,j-<span class="number">1</span>,array)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!isPass)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> array</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="6、数组去重、最大值、最小值"><a href="#6、数组去重、最大值、最小值" class="headerlink" title="6、数组去重、最大值、最小值"></a>6、数组去重、最大值、最小值</h5><p>这个就不说了，直接上代码</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>(array)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">removeRepeatArray</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="keyword">new</span> <span class="title class_">Set</span>(arr))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最大</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">maxArr</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,arr)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 最小</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">minArr</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="property">min</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,arr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>以上只是很小的一部分，还有大量的就靠你们自己去采坑了</p>
]]></content>
  </entry>
</search>
